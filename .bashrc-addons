#!/bin/bash -xe

LOG_INDENT=""

log_indent_inc() {
    LOG_INDENT="$LOG_INDENT""\t"
}

log_indent_dec() {
    LOG_INDENT=$(echo "$LOG_INDENT" | sed 's/\(.*\).$/\1/g')
}

log_begin() {
    echo -e "$LOG_INDENT""$1"
    log_indent_inc
}

log_end() {
    log_indent_dec
    echo -e "$LOG_INDENT""$1"
}

log() {
    echo -e "$LOG_INDENT""$1"
}

log_begin "bashrc-addons"

path_add() {
    local p="$1"
    if ! echo $PATH | tr ':' '\n' | grep -qx "$p"
    then
        export PATH=$PATH:"$p"
    fi
}

log "lib path"
export SH_LIB="$HOME/bin"

log "go setup"
export GOROOT=$HOME/usr/local/go
path_add "$GOROOT/bin"

log "add bin to PATH"
path_add "$HOME/bin"

log "general env vars"
export EDITOR='emacsclient -nw'

log "setup aliases"

alias-rm() {
    local a=$1
    if alias "$a" &> /dev/null ; then
        unalias $a
    fi
}

alias-rm l
alias-rm g
alias em='emacsclient -nw'
alias gl='git log --graph --all --oneline --decorate'
alias gll="git log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all --stat --color"
alias ll='less -JSIR'
#               ^^^^
#               ||||
#               |||+-- [R]aw ctrl chars (colors)
#               ||+----- [i]gnore case in search (except if upper chars)
#               |+-------- [S]hop long lines
#               +----------- status column (on the left)
alias dc='docker-compose'
alias xc='xclip -selection clipboard'
alias gd^='git diff HEAD^..HEAD'
alias egc='egrep --color=always'
alias eg='egrep'

echoErr() {
    echo "$@" 1>&2
}

log "check all home files are symlinked"
declare -r dotToExclude='^\.git$'
local allDotFiles="$(readlink -f .tmux.conf | xa dirname | xa ls -a | grep -e '^\.' | grep -v '^\.$' | grep -v '^\.\.$' | grep -v $dotToExclude)"
for i in $(echo $allDotFiles) ; do
    echo ">$i<"
    if ! ls "$i" > /dev/null; then
        echoErr "WARN! "
        echoErr "    dot file $i is not symlinked in $HOME"
        echoErr "    cmd to fix: "
        echoErr "    cd ~ && ln -s $(readlink -f $i) ."
    fi
;
done

log "setup some functions"

newsh() {
    : ${1? "

Usage: $FUNCNAME <scriptname>

"}
    local script="$1"
    if [[ -f "$script" ]]; then
        echo -e $"\nERROR! $script already exists!\n"
        return 1
    fi
    touch "$script"
    chmod +x "$script"
    {
        cat <<EOF
#!/usr/bin/env bash
set -euox pipefail
IFS=$'\n\t'
EOF
    } > "$script"
}

l() {
    ls --time-style=long-iso --color=always -altrhGb "$@"
}

c() {
    hr '.'
    cd $1 && l
}


log "setup java"
[ -n "$(which java)" ] && export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))

log "setup autojump"
autojump --version 2> /dev/null || 
    echo autojump not found! install with: sudo aptitude install autojump
. /usr/share/autojump/autojump.sh

log "setup dockviz"
alias dockviz="docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"

. ./.bashrc-addons.local
